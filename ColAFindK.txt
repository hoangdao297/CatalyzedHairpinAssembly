import numpy as np
import pandas as pd
from scipy.integrate import odeint
from sklearn.metrics import mean_squared_error
from math import sqrt
import matplotlib.pyplot as plt

#import data
df = pd.read_excel('ModelingNRLData.xlsx')
Time=df['Time'].values.tolist()
Concentration=df['A'].values.tolist()

# Catalyst + H1 -> CH1 (k1)
# H2 + CH1 -> CH1H2 + Catalyst (k2)
#CH1CH2 +RP-> RF+ RQ (k3)

#Normalize data
def normalizedata(concentration):
    data=[]
    for i in concentration:
        data.append(i*0.2)
    return data

#function to solve differential equations of the system
def cha(y, t, k1, k2, k3):
    ca, h1, ch1, h2, ch1h2, rp, rf = y
    dydt =  [-k1*ca*h1+ k2*h2*ch1, -k1*ca*h1, k1*ca*h1-k2*h2*ch1, -k2*h2*ch1, k2*h2*ch1, -k3*rp*ch1h2, k3*rp*ch1h2]
    return dydt

#Set the initial concentration [ca,h1,ch1,h2,ch1h2,rp,rf]
y0 = [0.02,0.2,0.0,0.2,0.0,0.2,0.0]

#Set time scale
t = np.linspace(0, 52, 52)

#finding k1 k2 k3 function
def findK(data,cha,y0,t):
    k1=1;k2=1;k3=0.1
    rmse=sqrt(mean_squared_error(data, odeint(cha, y0, t, args=(k1,k2,k3))[:, 6]))
    for i1 in np.arange(400,403,0.1):
        for i2 in np.arange(0.1,3,0.1):
            for i3 in np.arange(0.1,2,0.1):
                if (sqrt(mean_squared_error(data, odeint(cha, y0, t, args=(i1,i2,i3))[:, 6]))<rmse):
                    rmse=sqrt(mean_squared_error(data, odeint(cha, y0, t, args=(i1,i2,i3))[:, 6]))
                    k1=i1;k2=i2;k3=i3
    return [k1,k2,k3]

#Call function
allK=findK(normalizedata(Concentration),cha,y0,t)
print(allK)
sol = odeint(cha, y0, t, args=(allK[0],allK[1],allK[2]))

#Label for graphs
lca = "CAT(t)"
lh1 = "H1(t)"
lch1 = "CH1(t)"
xla = "Time (minutes)"
yla = "[C] (uM)"
lh2 = "H2(t)"
lch1h2 = "CH1H2(t)"
lrp = "RP(t)"
lrf = "RF(t)"

#Plotting
plt.figure(figsize=(20,20))
plt.scatter(x=Time,y=normalizedata(Concentration))
plt.plot(t, sol[:, 6], label = lrf)
plt.legend(loc='best')
plt.xlabel(xla)
plt.ylabel(yla)
plt.grid()
plt.savefig("NRLcolA.pdf")
plt.show()